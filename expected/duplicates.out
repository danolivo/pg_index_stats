SET pg_index_stats.stattypes = 'mcv, distinct, deps'; -- Set before the lib has loaded, just warn
SET pg_index_stats.columns_limit = 5;
-- Use check_estimated_rows from previous test
CREATE TABLE is_test(x1 integer, x2 integer, x3 integer, x4 integer);
INSERT INTO is_test (x1,x2,x3,x4)
  SELECT x%10,x%10,x%10,x%10 FROM generate_series(1,1E3) AS x;
VACUUM ANALYZE is_test;
CREATE INDEX ist_idx0 on is_test (x1,x2,x3,x4);
CREATE INDEX ist_idx_1 on is_test (x2, (x3*x3));
SHOW pg_index_stats.stattypes; --incorrect value still exists
 pg_index_stats.stattypes 
--------------------------
 mcv, distinct, deps
(1 row)

CREATE EXTENSION pg_index_stats;
WARNING:  invalid value for parameter "pg_index_stats.stattypes": "mcv, distinct, deps"
DETAIL:  parameter distinct is incorrect
SHOW pg_index_stats.stattypes; -- should be default value
 pg_index_stats.stattypes 
--------------------------
 mcv, ndistinct
(1 row)

-- Generate statistics on already existed indexes. Mind default values.
SELECT pg_index_stats_build('ist_idx0');
 pg_index_stats_build 
----------------------
 t
(1 row)

SELECT pg_index_stats_build('ist_idx_1', 'mcv, dependencies');
 pg_index_stats_build 
----------------------
 t
(1 row)

CREATE INDEX ist_idx1 on is_test (x1,x2,x3,x4);
CREATE INDEX ist_idx2 on is_test (x2,x1,x3,x4);
\dX
                                     List of extended statistics
 Schema |           Name           |         Definition          | Ndistinct | Dependencies |   MCV   
--------+--------------------------+-----------------------------+-----------+--------------+---------
 public | is_test_x1_x2_x3_x4_stat | x1, x2, x3, x4 FROM is_test | defined   |              | defined
 public | is_test_x2_expr_stat     | x2, (x3 * x3) FROM is_test  |           | defined      | defined
(2 rows)

SELECT pg_index_stats_rebuild(); -- must not have more duplicated stats
 pg_index_stats_rebuild 
------------------------
                      2
(1 row)

\dX
                                     List of extended statistics
 Schema |           Name           |         Definition          | Ndistinct | Dependencies |   MCV   
--------+--------------------------+-----------------------------+-----------+--------------+---------
 public | is_test_x1_x2_x3_x4_stat | x1, x2, x3, x4 FROM is_test | defined   |              | defined
 public | is_test_x2_expr_stat     | x2, (x3 * x3) FROM is_test  | defined   |              | defined
(2 rows)

-- TODO: Should not create statistics bacause of duplicates
SELECT pg_index_stats_build('ist_idx0', 'mcv');
 pg_index_stats_build 
----------------------
 f
(1 row)

SELECT pg_index_stats_build('ist_idx_1', 'mcv'); -- reject, already have same MCV
 pg_index_stats_build 
----------------------
 f
(1 row)

\dX
                                     List of extended statistics
 Schema |           Name           |         Definition          | Ndistinct | Dependencies |   MCV   
--------+--------------------------+-----------------------------+-----------+--------------+---------
 public | is_test_x1_x2_x3_x4_stat | x1, x2, x3, x4 FROM is_test | defined   |              | defined
 public | is_test_x2_expr_stat     | x2, (x3 * x3) FROM is_test  | defined   |              | defined
(2 rows)

-- Test covering statistics
SET pg_index_stats.columns_limit = 3;
SELECT pg_index_stats_build('ist_idx0', 'mcv, ndistinct, dependencies');
 pg_index_stats_build 
----------------------
 t
(1 row)

-- Create one new statistic (MCV, dependencies)
\dX
                                     List of extended statistics
 Schema |           Name           |         Definition          | Ndistinct | Dependencies |   MCV   
--------+--------------------------+-----------------------------+-----------+--------------+---------
 public | is_test_x1_x2_x3_stat    | x1, x2, x3 FROM is_test     |           | defined      | defined
 public | is_test_x1_x2_x3_x4_stat | x1, x2, x3, x4 FROM is_test | defined   |              | defined
 public | is_test_x2_expr_stat     | x2, (x3 * x3) FROM is_test  | defined   |              | defined
(3 rows)

SET pg_index_stats.columns_limit = 2;
SELECT pg_index_stats_build('ist_idx0', 'mcv, ndistinct, dependencies');
 pg_index_stats_build 
----------------------
 t
(1 row)

-- Create one new statistic with a MCV only
\dX
                                     List of extended statistics
 Schema |           Name           |         Definition          | Ndistinct | Dependencies |   MCV   
--------+--------------------------+-----------------------------+-----------+--------------+---------
 public | is_test_x1_x2_stat       | x1, x2 FROM is_test         |           |              | defined
 public | is_test_x1_x2_x3_stat    | x1, x2, x3 FROM is_test     |           | defined      | defined
 public | is_test_x1_x2_x3_x4_stat | x1, x2, x3, x4 FROM is_test | defined   |              | defined
 public | is_test_x2_expr_stat     | x2, (x3 * x3) FROM is_test  | defined   |              | defined
(4 rows)

RESET pg_index_stats.columns_limit;
DROP TABLE is_test CASCADE;
DROP EXTENSION pg_index_stats;
